#include <stdio.h>
int stack[100], choice, n, top, x, i;
void push(void);
void pop(void);
void display(void);
void isempty(void);
void isfull(void);
void search(void);

int main()
{
    // clrscr();
    top = -1;
    printf("\n Enter the size of STACK[MAX=100]:");
    scanf("%d", &n);
    printf("\n\t STACK OPERATIONS USING ARRAY");
    printf("\n\t 1.PUSH\n\t 2.POP\n\t 3.DISPLAY\n\t 4.EXIT\n\t 5.ISEMPTY\n\t 6.ISFULL\n\t 7.SEARCH\n\t 8.QUIT");
    while (choice != 8)
    {
        printf("\n Enter the Choice:");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            push();
            break;
        case 2:
            pop();
            break;
        case 3:
            display();
            break;
        case 4:
            printf("\n\t EXIT POINT ");
            break;
        case 5:
            isempty();
            break;
        case 6:
            isfull();
            break;
        case 7:
            search();
            break;
        case 8:
            return choice = 0;
            break;
        default:
            printf("\n\t Please Enter a Valid Choice(1/2/3/4)");
        }
    }
    return 0;
}
void push()
{
    if (top >= n - 1)
    {
        printf("\n\tSTACK is over flow");
    }
    else
    {
        printf(" Enter a value to be pushed:");
        scanf("%d", &x);
        top++;
        stack[top] = x;
    }
}
void pop()
{
    if (top <= -1)
    {
        printf("\n\t Stack is under flow");
    }
    else
    {
        printf("\n\t The popped elements is %d", stack[top]);
        top--;
    }
}
void display()
{
    if (top >= 0)
    {
        printf("\n The elements in STACK \n");
        for (i = top; i >= 0; i--)
            printf("\n%d", stack[i]);
        printf("\n Press Next Choice");
    }
    else
    {
        printf("\n The STACK is empty");
    }
}
void isempty()
{
    if (top == -1)
    {
        printf("the stack is empty");
    }
    else
    {
        printf("the stack is full");
    }
}
void isfull()
{
    if (top == n - 1)
    {
        printf("the stack is full");
    }
    else
    {
        printf("the stack is empty");
    }
}
void search()
{
    int x;
    printf("enter the element to be searched: ");
    scanf("%d", &x);
    for (i = 0; i <= top; i++)
    {
        if (x == stack[i])
        {
            printf("the element %d is present in the position %d", x, i + 1);
        }
    }
}
